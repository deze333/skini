# Comment
id = /home
logDir = /home/okay
logFile = my.log

supporting =
    classA
    classB

    classC

# Comment
[server.http]
    # Server specification
    port = 8080
    # Server specification
    mode = debug
    keys =
        keyOne
        keyTwo
        keyThree
    colors =
        red
        green
        blue

[map.texts]
    hello = Hey there !
    bye = See ya :)
    random = s=f(x)
    last/mine = MUST BE PRESENT
    text += The work described in this thesis is the result of a research program
    started in 1981 to find better ways of programming Telecom applica-
    tions. These applications are large programs which despite careful
    testing will probably contain many errors when the program is put into
    service. We assume that such programs do contain errors, and investigate
    methods for building reliable systems despite such errors.
    The research has resulted in the development of a new programming
    language (called Erlang), together with a design methodology, and set of
    libraries for building robust systems (called OTP). At the time of writing
    the technology described here is used in a number of major Ericsson, and
    Nortel products. A number of small companies have also been formed
    which exploit the technology.
    The central problem addressed by this thesis is the problem of con-
    structing reliable systems from programs which may themselves contain
    errors. Constructing such systems imposes a number of requirements on
    any programming language that is to be used for the construction. I discuss
    these language requirements, and show how they are satisfied by Erlang.

[map.redirects]
    ^abc/def$ = efg
    ^bed/bye$ = lko
